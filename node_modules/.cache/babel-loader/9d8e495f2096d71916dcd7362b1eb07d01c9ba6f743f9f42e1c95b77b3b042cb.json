{"ast":null,"code":"const API_URL = 'http://localhost:5000/books';\nexport const fetchBooks = async () => {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data; // return the JSON data\n  } catch (error) {\n    console.error('Error fetching books:', error);\n    throw error; // rethrow the error to be handled later if necessary\n  }\n};\nexport const deleteBook = async bookIdd => {\n  try {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'DELETE' // Specify the method as DELETE\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json(); // Optionally return the response\n  } catch (error) {\n    console.error('Error deleting book:', error);\n    throw error; // rethrow the error for handling if needed\n  }\n};","map":{"version":3,"names":["API_URL","fetchBooks","response","fetch","ok","Error","data","json","error","console","deleteBook","bookIdd","id","method"],"sources":["D:/Book_Project/book_inventory/src/API/Book_Api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/books';\r\n\r\nexport const fetchBooks = async () => {\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data; // return the JSON data\r\n  } catch (error) {\r\n    console.error('Error fetching books:', error);\r\n    throw error; // rethrow the error to be handled later if necessary\r\n  }\r\n};\r\n\r\nexport const deleteBook = async (bookIdd) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'DELETE', // Specify the method as DELETE\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return response.json(); // Optionally return the response\r\n  } catch (error) {\r\n    console.error('Error deleting book:', error);\r\n    throw error; // rethrow the error for handling if needed\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,6BAA6B;AAE7C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,IAAIY,EAAE,EAAE,EAAE;MAC/CC,MAAM,EAAE,QAAQ,CAAE;IACpB,CAAC,CAAC;IACF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}